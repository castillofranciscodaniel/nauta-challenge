# Configuración de la aplicación
spring.application.name=nauta-challenge

# Configuración de R2DBC para PostgreSQL
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/nauta_challenge
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres

# Habilitar repositorios R2DBC
spring.data.r2dbc.repositories.enabled=true

# Inicialización del esquema
spring.r2dbc.pool.enabled=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

# Habilitar la creación del esquema desde entidades
spring.r2dbc.properties.schema-generate=CREATE_DROP

# JWT
app.jwt.expiration=86400000

spring.main.allow-bean-definition-overriding=true

# Configuración de Kafka - Por defecto para desarrollo local
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=booking:com.challenge.nauta_challenge.core.model.Booking
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=booking:com.challenge.nauta_challenge.core.model.Booking
spring.kafka.consumer.properties.spring.json.trusted.packages=com.challenge.nauta_challenge.*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.max-poll-records=500
spring.kafka.listener.concurrency=3
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

# Tópico para bookings fallidos
spring.kafka.failed-bookings.topic=failed-bookings
spring.kafka.failed-bookings.group=consumer-group
spring.kafka.num-partitions=5
spring.kafka.replication-factor=2
